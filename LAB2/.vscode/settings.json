{
    "python.pythonPath": "/Users/zjx/anaconda3/bin/python3",
    "code-runner.executorMap": {
        "c": "cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
        "cpp": "cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",
    },
    "editor.renderWhitespace": "all",
    "editor.renderLineHighlight": "all",
    "editor.formatOnSave": false,
    "code-runner.runInTerminal": true,
    "code-runner.ignoreSelection": true,
    "code-runner.enableAppInsights": false,
    "C_Cpp.updateChannel": "Insiders",
    "[makefile]": {
        "editor.insertSpaces": true
    },
    "C_Cpp.default.includePath": [
        "/usr/local/opt/opencv@3/include"
        // "/usr/local/Cellar/opencv/4.0.1/include/opencv4"
        // "/usr/local/include/opencv4"
    ],
    "files.associations": {
        "*.java": "java",
        "iosfwd": "cpp",
        "iostream": "cpp",
        "__bit_reference": "cpp",
        "__config": "cpp",
        "__debug": "cpp",
        "__errc": "cpp",
        "__functional_base": "cpp",
        "__hash_table": "cpp",
        "__locale": "cpp",
        "__mutex_base": "cpp",
        "__node_handle": "cpp",
        "__nullptr": "cpp",
        "__split_buffer": "cpp",
        "__string": "cpp",
        "__threading_support": "cpp",
        "__tuple": "cpp",
        "algorithm": "cpp",
        "array": "cpp",
        "atomic": "cpp",
        "bit": "cpp",
        "bitset": "cpp",
        "cctype": "cpp",
        "chrono": "cpp",
        "clocale": "cpp",
        "cmath": "cpp",
        "compare": "cpp",
        "complex": "cpp",
        "concepts": "cpp",
        "condition_variable": "cpp",
        "cstdarg": "cpp",
        "cstddef": "cpp",
        "cstdint": "cpp",
        "cstdio": "cpp",
        "cstdlib": "cpp",
        "cstring": "cpp",
        "ctime": "cpp",
        "cwchar": "cpp",
        "cwctype": "cpp",
        "deque": "cpp",
        "exception": "cpp",
        "functional": "cpp",
        "initializer_list": "cpp",
        "ios": "cpp",
        "istream": "cpp",
        "iterator": "cpp",
        "limits": "cpp",
        "locale": "cpp",
        "memory": "cpp",
        "mutex": "cpp",
        "new": "cpp",
        "numbers": "cpp",
        "numeric": "cpp",
        "optional": "cpp",
        "ostream": "cpp",
        "queue": "cpp",
        "random": "cpp",
        "ratio": "cpp",
        "semaphore": "cpp",
        "sstream": "cpp",
        "stdexcept": "cpp",
        "streambuf": "cpp",
        "string": "cpp",
        "string_view": "cpp",
        "system_error": "cpp",
        "thread": "cpp",
        "tuple": "cpp",
        "type_traits": "cpp",
        "typeinfo": "cpp",
        "unordered_map": "cpp",
        "utility": "cpp",
        "vector": "cpp",
        "*.tcc": "cpp",
        "memory_resource": "cpp",
        "stop_token": "cpp",
        "stdlib.h": "c",
        "stdio.h": "c",
        "__tree": "cpp",
        "any": "cpp",
        "barrier": "cpp",
        "cfenv": "cpp",
        "charconv": "cpp",
        "cinttypes": "cpp",
        "codecvt": "cpp",
        "csetjmp": "cpp",
        "csignal": "cpp",
        "coroutine": "cpp",
        "forward_list": "cpp",
        "fstream": "cpp",
        "future": "cpp",
        "iomanip": "cpp",
        "latch": "cpp",
        "list": "cpp",
        "map": "cpp",
        "regex": "cpp",
        "scoped_allocator": "cpp",
        "set": "cpp",
        "shared_mutex": "cpp",
        "span": "cpp",
        "stack": "cpp",
        "typeindex": "cpp",
        "unordered_set": "cpp",
        "valarray": "cpp",
        "variant": "cpp",
        "cuchar": "cpp",
        "source_location": "cpp",
        "ranges": "cpp",
        "syncstream": "cpp",
        "math.h": "c",
        "grp.h": "c",
        "conio.h": "c",
        "windows.h": "c",
        "sdkddkver.h": "c",
        "_mingw.h": "c",
        "excpt.h": "c",
        "time.h": "c",
        "string.h": "c",
        "stdbool.h": "c",
        "sysctl.h": "c",
        "pthread.h": "c",
        "unistd.h": "c"
    },
    "C_Cpp.errorSquiggles": "Disabled"
}