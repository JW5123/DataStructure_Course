#include <stdio.h>
#include <stdlib.h>
定義結構為node{
    宣告data為整數型態;
    宣告node指標並指向下個節點;
}將結構node定義成Node型態;
宣告指標head, new_node, current為Node型態;
宣告指標pre指向NULL為Node型態;
宣告value, insert, i, Index為整數型態;
宣告函式Create(){
    輸出Please enter the data of the 1-th node:
    輸入資料(value)
    建立新節點new_node;
    將new_node的data設為value儲存輸入的資料;
    如果第一個節點為空(NULL){
        將第一個節點指向new_node;
    }
    否則{
        將current指向第一個節點(head);
        current的下個節點不等於空時走訪串列{
            current指向下個節點;
        }
        將current指向new_node;
    }
    換行兩次;
}
宣告整數函式CurSize(宣告指標node為Node型態){
    宣告整數型態size為0;
    當node不等於NULL時走訪串列{
        將node指向下個節點;
        使size向後遞增;
    }
    回傳size;
}
宣告函式Insert(){
    將current指向head;
    輸出Please enter the position to insert data:
    輸入插入位置(Index);
    呼叫CurSize函式並對current進行計算並存到整數型態size裡;
    如果Index小於等於0或大於size時{
        輸出Position error!!;
    }
    否則{
        輸出Please enter the data to insert:
        輸入插入資料(value);
        如果Index等於1時{
            建立新的節點new_node;
            將new_node的data設為value儲存輸入的資料;
            將new_node的下個節點指向head;
            head暫儲節點;
        }
        否則{
            將i設為1;
            將current指向head;
            當current不等於NULL時依序走訪串列{
                如果i+1等於Index時{
                    建立新節點new_node;
                    將new_node的data設為value儲存輸入的資料;
                    將new_node的下個節點設為current的下個節點;
                    將current的下個節點指向new_node;
                    break;
                }
                將current指向下個節點;
                使i遞增指向下一個位置;
            }
        }
    }
    換行兩次;
}
宣告函式Delete(){
    將current指向head;
    輸出Please enter the data to delete:
    使用者輸入資料(value);
    當current不為NULL和current指向的data不等於value時{
        將pre指向current;
        將current指向下個節點;
    }
    如果current等於NULL{
        輸出Not found;
    }
    如果current等於head{
        將head移到下個節點;
        釋放current;
        將current指向NULL;
    }
    否則{
        將pre的下個節點設為current的下個節點;
        釋放current;
        將current指向NULL;
    }
    換行兩次;
}
宣告函式Printout(){
    將current指向head;
    輸出Data:
    當current不等於NULL時依序走訪串列{
        輸出當前節點裡的資料;
        將current指向下個節點;
    }
    換行兩次;
}
int main(){
    宣告select為整數型態;
    1成立時重複執行下面步驟(while){
        輸出題目格式
        輸出Please Choose [0-4] : 
        輸入選項(select);
        switch(選項){   
            選項為1時:
                呼叫Create函式;
                break;
            選項為2時:
                呼叫Insert函式;
                break;
            選項為3時:
                呼叫Delete函式;
                break;
            選項為4時:
                呼叫Printout函式;
                break;
            選項為0時;
                退出程式;
                break;
            輸入值不在選項內:
                輸出換行兩次=== Error input (0-4) !!換行兩次
        }
    }
    return 0;
}