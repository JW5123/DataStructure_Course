#include <stdio.h>
定義一個MAX大小為100000
宣告Data為整數二維陣列 //紀錄血緣關係
宣告ans為整數陣列並初始化為0 //無小孩成員到無小孩成員最遠關係
宣告Count為整數陣列 //紀錄有多少小孩
宣告isChild為整數陣列 //判斷是否有父節點
宣告n為整數型態;
宣告DFS函式為整數型態(宣告i為整數型態){
    如果Count數量等於0(沒有小孩){
        回傳0;
    }
    如果Count數量等於1(一個小孩){
        回傳小孩深度加1;
    }
    否則(多個小孩){
        宣告max1和max2為整數型態並初始化為0;
        宣告Result為整數型態;
        for(搜尋所有節點x的小孩){
            將遞迴往下查找到無孩子的深度賦值給Result;
            //調整最遠和第二遠
            如果Result大於當前最遠(max1){
                將Result和max1交換;
            }
            如果Result大於第二遠(max2){
                將Result賦值給max2;
            }
        }
        如果max1＋max2比ans距離大{
            //表示a經過x到b為目前發現最遠的無孩子成員到無孩子成員距離
            ans = max1 + max2;
        }
        回傳最大值(max1);
    }
}
int main(){
    照題目格式輸出;
    while(輸入成員人數){
        for(搜尋所有節點x的小孩){
            照題目格式輸出;
            輸入成員關係;
            計算有幾個小孩;
            紀錄是否為其他人的小孩;
        }
        宣告ancestor為整數型態;
        for(搜尋所有成員){
            如果不是其他人的小孩就是祖先;
            break;
        }
        宣告ResultRoot為整數型態;
        計算深度(從祖先到最遠血緣距離小孩的距離)並賦值給ResultRoot;
        如果祖先到最遠血緣距離小孩的距離大於ans{
            輸出ResultRoot;
        }
        否則{
            輸出ans;
        }
        將ans和ResultRoot歸零;
        換行;
    }
    return 0;
}